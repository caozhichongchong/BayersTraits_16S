#ws4_liliguan/Chr new8000 + complete 5000 Chr
#ws2_liliguan/Chr draft 50000 Chr
#ws4_liliguan/Pla new8000 pla
#ws4_liliguan/plasmid plasmid database
#ws4_liliguan/newadd_complete.../GBFF/Pla complete 5000 Pla
#ws2_liliguan/Pla draft 50000 Pla

# complete genomes
from Bio import SeqIO
f1=open('ws4.16S.CG.fasta','wb')
CG=[]
for lines in open('Complete_genomes.txt','rb'):
    CG.append(lines.split('.')[0].replace('\r','').replace('\n',''))

for record in SeqIO.parse(open('ws4.16S.fasta', 'r'), 'fasta'):
    if record.id in CG:
        f1.write('>' + str(record.id) + '\n' + str(record.seq) + '\n')

from Bio import SeqIO
f1=open('Sat.fasta','wb')
i=1
for record in SeqIO.parse(open('Sat EC 2.7.7.4.fasta', 'r'), 'fasta'):
    if 'SAT_' in record.id:
        f1.write('>SAT_'+str(i)+'\t'+str(record.id)+'\n'+str(record.seq)+'\n')
        i+=1


# complete genomes with 16S
from Bio import SeqIO
CG=[]
for record in SeqIO.parse(open('ws4.16S.CG.fasta', 'r'), 'fasta'):
    CG.append(record.id)

f1=open('butyrate_noato_CG_16S.txt','wb')
for lines in open('butyrate_noato_CG.txt','rb'):
    if lines.split('\t')[0] in CG:
        f1.write(lines)

f1.close()

#add filename
def addname(filedir, file_name):
    Fasta_name = open(os.path.join(filedir,file_name), 'r')
    f = open(os.path.join(filedir,file_name + '.add'), 'w')
    in_dir, input_file = os.path.split(file_name)
    for record in SeqIO.parse(Fasta_name, 'fasta'):
        if len(str(record.seq).replace(' ',''))>0:
            # remove empty ORF sequences, otherwise there could be a problem for blast, usearch and diamond
            f.write('>'+str(input_file)+'_'+str(record.id) + '\t' + str(record.description).replace('\t', ' ') + '\n' + str(
                str(record.seq)) + '\n')
    f.close()

import glob
import os
from Bio import SeqIO
in_dir='.'
for root,dirs,files in os.walk(in_dir):
    list_fasta1 = glob.glob(os.path.join(root, '*.fna'))
    for fastas in list_fasta1:
        dirname,fastaname=os.path.split(fastas)
        addname(dirname, fastaname)


#butyrate production gene identification
hmmpress *.hmm
hmmfetch -o Butyrate.hmm -f Pfam-A.hmm pfam_marker.txt
hmmscan --cpu 12 --tblout trypfam_hmm_out --domtblout trypfam_domain_out --pfamtblout try_pfam_out /media/liliguan/ZAN.disk2/Butyrate.hmm Pla/Pla0/GCA_000009205.2.pla.faa
#usearch first and then extract and then kegg database
blastp -db /media/liliguan/ZAN.disk2/Butyrate.pro.faa -query  -out all_PPK1_full_DB.txt -outfmt 6 -max_target_seqs 1 -evalue 1e-5 -num_threads 4

nohup python Traits_WGD.py --fa .fna.add --orf .genes.faa -i genomes/geba -db database/Butyrate.pro.aa -s 1 --t 30 --u usearchv8 --r Butyrate_geba &
python Traits_WGD.py --fa .fa --orf .faa -i genomes/WGD/ws2_liliguan/Chr/ -db database/Butyrate.pro.aa -s 1 --t 30 --u usearchv8 --r Butyrate_ws2

python Traits_WGD.py --fa .fa --orf .faa -i genomes/WGD/ws4_liliguan/Chr/ -db database/NR.hmm -s 2 --t 30 --u usearchv8 --r NR_ws4
python Traits_WGD.py --fa .fa --orf .faa -i genomes/WGD/ws2_liliguan/Chr/ -db database/NR.hmm -s 2 --t 30 --u usearchv8 --r NR_ws2
python Traits_WGD.py --fa .fa --orf .faa -i genomes/WGD/ws4_liliguan/Chr/ -db database/SRB.AA -s 1 --t 30 --u usearchv8 --r SRB_ws4

usearchv8 -ublast genomes/WGD/ws4_liliguan/Chr/ws4.Chr.faa.add -db database/SRB.AA -evalue 1e-2 -accel 0.5 -blast6out SRB_ws4/usearch/ws4.Chr.faa.add.usearch.txt -threads 30 
python scripts/Extract.py -i genomes/WGD/ws4_liliguan/Chr -f ws4.Chr.faa.add -n .usearch.txt -r SRB_ws4/usearch 
blastp -query SRB_ws4/usearch/ws4.Chr.faa.add.usearch.txt.aa -db database/SRB.AA -out SRB_ws4/search_output/ws4.Chr.faa.add.blast.txt  -outfmt 6 -max_target_seqs 1 -evalue 1e-05 -num_threads 30 
python scripts/Filter.py -i SRB_ws4/search_output -f ws4.Chr.faa.add.blast.txt -db database/SRB.AA -s 1 --ht 50.0 --id 50.0 --e 1e-05 
python scripts/Extract.py -i genomes/WGD/ws4_liliguan/Chr -f ws4.Chr.faa.add -n .blast.txt.filter -r SRB_ws4/search_output 

# use genome as database
nohup blastp -db genomes/WGD/ws4_liliguan/Chr/ws4.Chr.faa.add -query database/SRB.AA -out SRB_ws4/search_output/ws4asdb.Chr.faa.add.blast.txt  -outfmt 6 -max_target_seqs 1 -evalue 1e-05 -num_threads 30 &
python scripts/Filter.py -i SRB_ws4/search_output -f ws4asdb.Chr.faa.add.blast.txt -db database/SRB.AA -s 1 --ht 50.0 --id 50.0 --e 1e-05 


usearchv8 -ublast genomes/WGD/ws4_liliguan/Chr/2524614808.genes.faa.add -db database/Butyrate.pro.aa -evalue 1e-2 -accel 0.5 -blast6out Butyrate_geba/usearch/0/2524614808.genes.faa.add.usearch.txt -threads 1 
python scripts/Extract.py -i genomes/geba/data/2524614808 -f 2524614808.genes.faa.add -n .usearch.txt -r Butyrate_geba/usearch/0 
blastp -query Butyrate_geba/usearch/0/2524614808.genes.faa.add.usearch.txt.aa -db database/Butyrate.pro.aa -out Butyrate_geba/search_output/0/2524614808.genes.faa.add.blast.txt  -outfmt 6 -max_target_seqs 1 -evalue 1e-05 -num_threads 1 
python scripts/Filter.py -i Butyrate_geba/search_output/0 -f 2524614808.genes.faa.add.blast.txt -db database/Butyrate.pro.aa -s 1 --ht 50.0 --id 50.0 --e 1e-05 
python scripts/Extract.py -i genomes/geba/data/2524614808 -f 2524614808.genes.faa.add -n .blast.txt.filter -r Butyrate_geba/search_output/0 
python scripts/undone.py -i genomes/geba/data/2524614808/2524614808.fna.add 
usearchv8 -ublast genomes/geba/data/2524614808/2524614808.fna.add -db database/gg85.udb -evalue 1e-5 -id 0.9 -accel 0.5 -strand both -blast6out 16S/0/2524614808.fna.add.16S.txt -threads 1 
python scripts/Extract.16S.py -i genomes/geba/data/2524614808 -f 2524614808.fna.add -n .16S.txt -r 16S/0 

import glob
import os
in_dir='.'
for root,dirs,files in os.walk(in_dir):
    list_fasta1 = glob.glob(os.path.join(root, '*.tar.gz'))
    if list_fasta1!=[]:
        for files in list_fasta1:
            print 'tar zxf '+files.replace('IMG Data','IMG\ Data')
            #os.system('tar zxf '+files.replace('IMG Data','IMG\ Data'))

usearchv8 -ublast ./Chr/GCA_000015985.1_CP000577.1.chr.faa.add -db database/Butyrate.pro.aa -evalue 1e-2 -accel 0.5 -blast6out Butyrate/usearch/0/GCA_000015985.1_CP000577.1.chr.faa.add.usearch.txt -threads 1 
python scripts/Extract.py -i ./Chr -f GCA_000015985.1_CP000577.1.chr.faa.add -n .usearch.txt -r Butyrate/usearch/0 
blastp -query Butyrate/usearch/0/GCA_000015985.1_CP000577.1.chr.faa.add.usearch.txt.aa -db database/Butyrate.pro.aa -out Butyrate/search_output/0/GCA_000015985.1_CP000577.1.chr.faa.add.blast.txt  -outfmt 6 -max_target_seqs 1 -evalue 1e-05 -num_threads 1 
python scripts/Filter.py -i Butyrate/search_output/0 -f GCA_000015985.1_CP000577.1.chr.faa.add.blast.txt -db database/Butyrate.pro.aa -s 1 --ht 50.0 --id 50.0 --e 1e-05 
python scripts/Extract.py -i ./Chr -f GCA_000015985.1_CP000577.1.chr.faa.add -n .blast.txt.filter -r Butyrate/search_output/0 
usearchv8 -ublast ./Chr/GCA_000015985.1_CP000577.1.chr.fa -db database/gg85.udb -evalue 1e-5 -id 0.9 -accel 0.5 -strand both -blast6out 16S/0/GCA_000015985.1_CP000577.1.chr.fa.16S.txt -threads 1 
python scripts/Extract.16S.py -i ./Chr -f GCA_000015985.1_CP000577.1.chr.fa -n .16S.txt -r 16S/0 

#16S tree
nohup muscle -in 16S.fasta -out 16S.alignment.fasta -maxiters 1 -diags1 & 
usearchv8 -allpairs_global ibd_alm.otu_seqs.100.geba.rename.fasta -alnout ibd_alm.otu_seqs.100.geba.aln                                       [10:09AM]

#Use Mega to build the 16S tree!

from Bio import Phylo
Phylo.convert('16S.tree.nwk', 'newick', '16S.tree.nex', 'nexus')

#re-format, example Birds.trees
#\r\n > \n
cd Butyrate
Could not find a matching taxa name for data point 2541046937
Could not find a matching taxa name for data point 2556921630

nohup /media/liliguan/ZAN.disk2/BayesTraitsV3.0.1-Linux/BayesTraitsV3 ../16S.tree.nex butyrate_noato.txt < ../Bayes_Multistate_na.txt &
nohup /media/liliguan/ZAN.disk2/BayesTraitsV3.0.1-Linux/BayesTraitsV3 ../16S.tree.nex butyrate_withato.txt < ../Bayes_Multistate_wa.txt &
nohup /media/liliguan/ZAN.disk2/BayesTraitsV3.0.1-Linux/BayesTraitsV3 ../16S.tree.nex NR.txt < ../Bayes_Multistate_nr.txt &


from Bio import SeqIO
Seq=[]
f1=open('ws4.16S.CG.dedupli.fasta','wb')
for record in SeqIO.parse(open('ws4.16S.CG.fasta', 'r'), 'fasta'):
    if record.id not in Seq:
        Seq.append(record.id)
        #f1.write('>' + str(record.description).replace('GCA_','GCA').split('_')[0].replace('GCA','GCA_').split('\t')[1] + '\n' + str(record.seq) + '\n')
        f1.write('>' + str(record.id)+ '\n' + str(record.seq) + '\n')

f1.close()

for record in SeqIO.parse(open('16S.dedupli.fasta', 'r'), 'fasta'):
    if record.id in Genome:
        f1.write('>' + str(record.id) + '\n' + str(record.seq) + '\n')

python Traits_WGD.py -db database/NR.hmm -s 2 --t 30 --u usearchv8 --r NR

from Bio import SeqIO
f1=open('16S.alignment.dedupli.rename.fasta','wb')
f2=open('16S.alignment.dedupli.rename.txt','wb')
i=1
for record in SeqIO.parse(open('16S.alignment.dedupli.fasta', 'r'), 'fasta'):
    f1.write('>' + str(i) + '\n' + str(record.seq) + '\n')
    f2.write('\t\t'+str(i)+'\t'+str(record.id)+',\n')
    i+=1

from Bio import SeqIO
f1=open('16S.alignment.dedupli.rename.fasta','wb')
f2=open('16S.alignment.dedupli.rename.txt','wb')
i=1
Seq=[]
for lines in open('butyrate_noato.txt','rb'):
    Seq.append(lines.split('\t')[0])

for record in SeqIO.parse(open('16S.alignment.dedupli.fasta', 'r'), 'fasta'):
    if record.id in Seq:
        f1.write('>' + str(i) + '\n' + str(record.seq) + '\n')
        f2.write('\t\t'+str(i)+'\t'+str(record.id)+',\n')
        i+=1

cat ../../geba/16S.dedupli.fasta ibd_alm.otu_seqs.100.fasta > ibd_alm.otu_seqs.100.geba.fasta
#export PATH="$PATH:/usr/local/bin"
#export MANPATH="$MANPATH:/usr/local/share/man"
#export SSUALIGNDIR="/usr/local/share/ssu-align-0.1.1"
#ssu-align --no-search -n bacteria ibd_alm.otu_seqs.100.geba.fasta idb_alm_nosearch
cmalign -o ibd_alm.otu_seqs.100.geba.align.fasta --outformat Pfam --dnaout --cpu 2 --informat FASTA bacterial.cm ibd_alm.otu_seqs.100.geba.rename.fasta
usearchv8 -allpairs_global ibd_alm.otu_seqs.100.geba.rename.fasta -alnout ibd_alm.otu_seqs.100.geba.aln -acceptall

nohup muscle -in ibd_alm.otu_seqs.100.geba.fasta -out ibd_alm.otu_seqs.100.geba.alignment.fasta & 


import os
Dirname=[]
for lines in open('../../Filelist.txt','r'):
    Tag=lines.split('GCA_')[1].split('.')[0][0:5]
    if Tag not in Dirname:
        Dirname.append(Tag)

for Tag in Dirname:
    os.system('mkdir '+str(Tag))
    os.system('mv GCA_'+str(Tag)+'* '+str(Tag))

usearch -ublast ./genome/Chr/Chr442/GCA_001894145.1_MOKJ01000122.1.chr.faa.add -db database/Butyrate.pro.aa -evalue 1e-2 -accel 0.5 -blast6out Butyrate_temp/usearch/0/GCA_001894145.1_MOKJ01000122.1.chr.faa.add.usearch.txt -threads 1 
python scripts/Extract.py -i ./genome/Chr/Chr442 -f GCA_001894145.1_MOKJ01000122.1.chr.faa.add -n .usearch.txt -r Butyrate_temp/usearch/0 
blastp -query Butyrate_temp/usearch/0/GCA_001894145.1_MOKJ01000122.1.chr.faa.add.usearch.txt.aa -db database/Butyrate.pro.aa -out Butyrate_temp/search_output/0/GCA_001894145.1_MOKJ01000122.1.chr.faa.add.blast.txt  -outfmt 6 -max_target_seqs 1 -evalue 1e-05 -num_threads 1 
python scripts/Filter.py -i Butyrate_temp/search_output/0 -f GCA_001894145.1_MOKJ01000122.1.chr.faa.add.blast.txt -db database/Butyrate.pro.aa -s 1 --ht 50.0 --id 50.0 --e 1e-05 
python scripts/Extract.py -i ./genome/Chr/Chr442 -f GCA_001894145.1_MOKJ01000122.1.chr.faa.add -n .blast.txt.filter -r Butyrate_temp/search_output/0 
usearch -ublast ./genome/Chr/Chr442/GCA_001894145.1_MOKJ01000122.1.chr.fna -db database/gg85.udb -evalue 1e-5 -id 0.9 -accel 0.5 -strand both -blast6out 16S/0/GCA_001894145.1_MOKJ01000122.1.chr.fna.16S.txt -threads 1 
python scripts/Extract.16S.py -i ./genome/Chr/Chr442 -f GCA_001894145.1_MOKJ01000122.1.chr.fna -n .16S.txt -r 16S/0 


#trees
# 12 min 
#mafft --nuc --adjustdirection --quiet --maxiterate 2 --retree 1 ../geba/16S.dedupli.fasta > 16S.dedupli.fasta.align
# 1 min
mafft --nuc --adjustdirection --quiet --maxiterate 0 --retree 2 ../geba/16S.dedupli.fasta > 16S.dedupli.fasta.align
# 3 min
fasttree -quiet -fastest -nt -nosupport 16S.dedupli.fasta.align > 16S.dedupli.fasta.align.nwk 

#bayerstraits
python BayersTraits.py -th 30 -t ibd_alm_results/ibd_alm.otu_table.100.denovo -top 5000 -s ibd_alm_results/ibd_alm.otu_seqs.100.fasta -rt ../geba/16S.dedupli.fasta -rd ../geba/Butyrate/butyrate_noato.txt -r BayersTraits_5000

python scripts/OTU.filter.py -t ibd_alm_results/ibd_alm.otu_table.100.denovo -s ibd_alm_results/ibd_alm.otu_seqs.100.fasta -top 1000 -r BayersTraits/Filtered_OTU 
cat BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter ../geba/16S.dedupli.fasta > BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.16S 
python scripts/treeformat.py -rd ../geba/Butyrate/butyrate_noato.txt -s ibd_alm.otu_seqs.100.fasta.filter.16S -r BayersTraits/Filtered_OTU 
mafft --nuc --adjustdirection --quiet --maxiterate 0 --retree 2 --nofft --thread 30 BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.16S.format > BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.align.16S 
python scripts/treeformat.py -a BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.align.16S 
fasttree -quiet -fastest -nt -nosupport BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.align.16S.format > BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.align.16S.nwk 
python scripts/Bayers.model.py -t BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.align.16S.nwk -ta BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.16S.taxa.translate -d BayersTraits/Filtered_OTU/ibd_alm.otu_seqs.100.fasta.filter.16S.data -a BayersTraits/Filtered_OTU/ibd_alm.otu_table.100.denovo.abu.table -r BayersTraits/Bayers_model 

#bayerstraits ibd (1000~5000 similar)

#TRIAL
for file in genomes/Genome_butyrate_*
do
python BayersTraits.py -th 30 -t 16S/HMD/ibd_alm.otu_table.100.denovo -s 16S/HMD/ibd_alm.otu_seqs.100.fasta -rt genomes/ws4.16S.CG.dedupli.fasta -rd "${file}" -r inferTraits_"${file/genomes\//}"
python BayersTraits.py -th 30 -t 16S/HMD/ibd_engstrand_maxee.otu_table.100.denovo -s 16S/HMD/ibd_engstrand_maxee.otu_seqs.100.fasta -rt genomes/ws4.16S.CG.dedupli.fasta -rd "${file}" -r inferTraits_"${file/genomes\//}"
python BayersTraits.py -th 30 -t 16S/HMD/ibd_gevers_2014.otu_table.100.denovo -s 16S/HMD/ibd_gevers_2014.otu_seqs.100.fasta -rt genomes/ws4.16S.CG.dedupli.fasta -rd "${file}" -r inferTraits_"${file/genomes\//}"
python BayersTraits.py -th 30 -t 16S/HMD/ibd_huttenhower.otu_table.100.denovo -s 16S/HMD/ibd_huttenhower.otu_seqs.100.fasta -rt genomes/ws4.16S.CG.dedupli.fasta -rd "${file}" -r inferTraits_"${file/genomes\//}"
done

#SRB + NR
nohup python BayersTraits.py -th 3 -t ../16S/100wells/02um_otu_table.biom.txt -s ../16S/100wells/eotus.fasta -top 1000 -rt  ../models/ws4_chr/genome/ws4.16S.CG.dedupli.fasta -rd ../models/ws4_chr/genome/Genome_SRB.txt -r inferTraits_SRB &
nohup python BayersTraits.py -th 3 -t ../16S/100wells/02um_otu_table.biom.txt -s ../16S/100wells/eotus.fasta -top 1000 -rt  ../models/ws4_chr/genome/ws4.16S.CG.dedupli.fasta -rd ../models/ws4_chr/genome/Genome_NR.txt -r inferTraits_NR &


